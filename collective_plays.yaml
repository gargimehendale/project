---
 - name: launch_ec2_instance
   hosts: localhost
   vars:
     count: 2
     var: ec2.instances
   tasks:
      - copy:
          content: |
            [master]
            [node]
          dest: ./inventory
      - name: master
        ec2:
          key_name: mehendalegargi_aws
          instance_type: t2.medium
          image: ami-0015b9ef68c77328d
          region: us-east-1
          group: securegroup
          count: 1
          wait: yes
          instance_tags:
              Name: master
          user_data: |
                     #!/bin/bash
                     sudo useradd ansible 
                     PASSWD="ansible"
                     sudo echo ${PASSWD} | passwd --stdin ansible
                     sudo echo "ansible ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
                     sudo sed -i 'PasswordAuthentication yes/s/^#//' /etc/ssh/sshd_config
                     sudo sed -i "s/PasswordAuthentication no/#PasswordAuthentication no/g" /etc/ssh/sshd_config
                     sudo systemctl restart sshd
        register: ec2
      - lineinfile:
         path: ./inventory
         line: "{{item.private_ip}} ansible_connection=ssh ansible_user=ansible ansible_ssh_pass=ansible"
         insertafter: "[master]"
         firstmatch: yes
        with_items: "{{ec2.instances}}"
      - name: node
        ec2:
          key_name: mehenddalegargi_aws
          instance_type: t2.medium
          image: ami-0015b9ef68c77328d
          region: us-east-1
          count: "{{count}}"
          group: securegroup
          wait: yes
          instance_tags:
              Name: node
          user_data: |
                     #!/bin/bash
                     sudo useradd ansible
                     PASSWD="ansible"
                     sudo echo ${PASSWD} | passwd --stdin ansible
                     sudo echo "ansible ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
                     sudo sed -i 'PasswordAuthentication yes/s/^#//' /etc/ssh/sshd_config
                     sudo sed -i "s/PasswordAuthentication no/#PasswordAuthentication no/g" /etc/ssh/sshd_config
                     sudo systemctl restart sshd
        register: ec21
      - lineinfile:
         path: ./inventory
         line: "{{item.private_ip}} ansible_connection=ssh ansible_user=ansible ansible_ssh_pass=ansible"
         insertafter: "[node]"
        with_items: "{{ec21.instances}}"
      - name: creating ansible.cfg
        copy:
         content: |
                  [defaults]
                  inventory = inventory
                  host_key_checking = False
         dest: ./ansible.cfg
      - name: pause play
        pause:
         minutes: 1
      - name: refresh inventory
        meta: refresh_inventory

 - name: kubernetes_file
   hosts: all
   become: yes
   tasks:
      - name: swap_off
        mount:
          name: "{{ item }}"
          fstype: swap
          state: absent
        with_items:
          - swap
      - name: repo_add
        yum_repository:
          name: kubernetes
          description: kubernetes
          baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled: yes
          gpgcheck: yes
          repo_gpgcheck: yes
          gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      - name: install "{{ item }}"
        yum:
          name: "{{ item }}"
          state: present
        with_items:
          - docker
          - kubelet
          - kubectl
          - kubeadm
      - name: service "{{ item }}" start
        service:
          name: "{{ item }}"
          state: started
          enabled: yes
        with_items:
          - kubelet
          - docker

 - name: master_configuration
   hosts: master
   become: yes
   tasks:
      - name: initialize_master
        shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
        args:
          chdir: $HOME
          creates: cluster_initialized.txt

      - name: create_.kube_directory
        become: yes
        become_user: ansible
        file:
          path: $HOME/.kube
          state: directory
          mode: 0755

      - name: copy admin.conf to user's kube config
        copy:
          src: /etc/kubernetes/admin.conf
          dest: /home/ansible/.kube/config
          remote_src: yes
          owner: ansible

      - name: install Pod network
        become: yes
        become_user: ansible
        shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

      - name: get join command
        shell: kubeadm token create --print-join-command
        register: kubernetes_join_command
      - debug:
          msg: "{{ kubernetes_join_command.stdout }}"
      - name: Copy join command to local file.
        local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777

 - name: to join worker
   hosts: node
   become: yes
   tasks:
    - name: Copy join command to worker nodes.
      become: yes
      copy:
        src: /tmp/kubernetes_join_command
        dest: /tmp/kubernetes_join_command
        mode: 0777
    - name: Join the Worker nodes with the master.
      become: yes
      command: sh /tmp/kubernetes_join_command
      register: joined_or_not
    - debug:
        msg: "{{ joined_or_not.stdout }}"
        
 - name: add repo and install kubectl
   hosts: localhost
   vars: 
       localhost_user: centos
   tasks:
     - name: create_.kube_directory
       become: yes
       file:
          path: /home/{{localhost_user}}/.kube
          state: directory
          mode: 0755
     - name: repo_add
       become: yes
       yum_repository:
          name: kubernetes
          description: kubernetes
          baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled: yes
          gpgcheck: yes
          repo_gpgcheck: yes
          gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
     - name: install "{{ item }}"
       become: yes
       yum:
          name: "{{ item }}"
          state: present
       with_items:
          - kubectl
     
 - name: fetching the kube config file
   hosts: master
   become: yes
   tasks:
     - name: copy
       fetch:
         src: /home/ansible/.kube/config
         dest: ./config
         flat: yes
 - name: copy conf file
   vars: 
     - localhost_user: centos
   hosts: localhost
   become: yes
   tasks: 
     - shell: mv /var/lib/jenkins/workspace/yamlpoll/config /home/{{localhost_user}}/.kube/
